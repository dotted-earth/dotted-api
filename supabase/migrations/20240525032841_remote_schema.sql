
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."budget_type" AS ENUM (
    'daily',
    'fixed'
);

ALTER TYPE "public"."budget_type" OWNER TO "postgres";

CREATE TYPE "public"."itinerary_status" AS ENUM (
    'ai_pending',
    'ai_failure',
    'draft',
    'finalized',
    'canceled',
    'in_progress',
    'completed'
);

ALTER TYPE "public"."itinerary_status" OWNER TO "postgres";

CREATE TYPE "public"."schedule_intensity" AS ENUM (
    'relaxed',
    'moderate',
    'active'
);

ALTER TYPE "public"."schedule_intensity" OWNER TO "postgres";

CREATE TYPE "public"."schedule_item_type" AS ENUM (
    'accomodation',
    'transporation',
    'meal',
    'activity'
);

ALTER TYPE "public"."schedule_item_type" OWNER TO "postgres";

CREATE TYPE "public"."schedule_length" AS ENUM (
    'quarter_day',
    'half_day',
    'full_day',
    'whole_day'
);

ALTER TYPE "public"."schedule_length" OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."delete_user"() RETURNS "void"
    LANGUAGE "sql" SECURITY DEFINER
    AS $$
	--delete from public.profiles where id = auth.uid();
	delete from auth.users where id = auth.uid();
$$;

ALTER FUNCTION "public"."delete_user"() OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."get_all_preference_choices"() RETURNS "jsonb"
    LANGUAGE "plpgsql"
    AS $$
begin
return json_build_object(
      'cuisineChoices', (select json_agg(json_build_object('id', cuisines.id, 'name', cuisines.name)) from cuisines),
      'dietChoices', (select json_agg(json_build_object('id', diets.id, 'name', diets.name)) from diets),
      'allergyChoices', (select json_agg(json_build_object('id', food_allergies.id, 'name', food_allergies.name)) from food_allergies),
      'recreationChoices', (select json_agg(json_build_object('id', recreations.id, 'name', recreations.name)) from recreations)
  );
end;
$$;

ALTER FUNCTION "public"."get_all_preference_choices"() OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."get_user_preferences"("user_id" "uuid") RETURNS "jsonb"
    LANGUAGE "plpgsql"
    AS $$
begin
  return json_build_object(
      'cuisinePreferences', (select array(select id from user_cuisines)),
      'dietPreferences', (select array(select id from user_diets)),
      'allergyPreferences', (select array(select id from user_food_allergies)),
      'recreationPreferences', (select array(select id from user_recreations))
  );
end;
$$;

ALTER FUNCTION "public"."get_user_preferences"("user_id" "uuid") OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."handle_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    AS $$
begin
  insert into public.profiles (id, full_name, avatar_url)
  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');
  return new;
end;
$$;

ALTER FUNCTION "public"."handle_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."addresses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "street1" "text" NOT NULL,
    "street2" "text",
    "city" "text" NOT NULL,
    "state" "text" NOT NULL,
    "country" "text" NOT NULL,
    "postal_code" "text" NOT NULL,
    "address_string" "text" NOT NULL
);

ALTER TABLE "public"."addresses" OWNER TO "postgres";

COMMENT ON COLUMN "public"."addresses"."address_string" IS 'the whole address as a single string';

ALTER TABLE "public"."addresses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."addresses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."budget" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "max" integer NOT NULL,
    "budget_type" "public"."budget_type" DEFAULT 'daily'::"public"."budget_type" NOT NULL
);

ALTER TABLE "public"."budget" OWNER TO "postgres";

ALTER TABLE "public"."budget" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."budget_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."cuisines" (
    "id" smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" character varying
);

ALTER TABLE "public"."cuisines" OWNER TO "postgres";

ALTER TABLE "public"."cuisines" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."cuisines_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."destinations" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" character varying NOT NULL,
    "city" character varying NOT NULL,
    "country" character varying NOT NULL,
    "lat" real NOT NULL,
    "lon" real NOT NULL,
    "currency" "text" NOT NULL,
    "language" character varying NOT NULL
);

ALTER TABLE "public"."destinations" OWNER TO "postgres";

ALTER TABLE "public"."destinations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."destinations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."diets" (
    "id" smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" character varying
);

ALTER TABLE "public"."diets" OWNER TO "postgres";

ALTER TABLE "public"."diets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."diet_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."email_sign_ups" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "email" character varying NOT NULL,
    "is_verified" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."email_sign_ups" OWNER TO "postgres";

ALTER TABLE "public"."email_sign_ups" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."email_sign_ups_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."food_allergies" (
    "id" smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" character varying
);

ALTER TABLE "public"."food_allergies" OWNER TO "postgres";

ALTER TABLE "public"."food_allergies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."food_allergies_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."itineraries" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "start_date" "date" NOT NULL,
    "length_of_stay" smallint NOT NULL,
    "end_date" "date" NOT NULL,
    "destination" character varying NOT NULL,
    "budget" bigint,
    "itinerary_status" "public"."itinerary_status" DEFAULT 'ai_pending'::"public"."itinerary_status" NOT NULL,
    "user_id" "uuid" NOT NULL,
    "media_id" bigint
);

ALTER TABLE "public"."itineraries" OWNER TO "postgres";

ALTER TABLE "public"."itineraries" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."itineraries_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."media" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "url" character varying NOT NULL
);

ALTER TABLE "public"."media" OWNER TO "postgres";

ALTER TABLE "public"."media" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."media_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."profiles" (
    "id" "uuid" NOT NULL,
    "updated_at" timestamp with time zone,
    "username" "text",
    "full_name" "text",
    "avatar_url" "text",
    "is_email_verified" boolean DEFAULT false,
    "has_on_boarded" boolean DEFAULT false NOT NULL,
    CONSTRAINT "username_length" CHECK (("char_length"("username") >= 3))
);

ALTER TABLE "public"."profiles" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."recreations" (
    "id" smallint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "description" character varying
);

ALTER TABLE "public"."recreations" OWNER TO "postgres";

ALTER TABLE "public"."recreations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."recreations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."schedule_items" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "schedule_id" bigint NOT NULL,
    "schedule_item_type" "public"."schedule_item_type" NOT NULL,
    "name" character varying NOT NULL,
    "description" character varying NOT NULL,
    "start_time" timestamp with time zone NOT NULL,
    "end_time" timestamp with time zone NOT NULL,
    "duration" real NOT NULL,
    "price" numeric
);

ALTER TABLE "public"."schedule_items" OWNER TO "postgres";

COMMENT ON TABLE "public"."schedule_items" IS 'schedule line items';

ALTER TABLE "public"."schedule_items" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."schedule_items_d_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."schedules" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "itinerary_id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "description" character varying,
    "schedule_intensity" "public"."schedule_intensity" NOT NULL,
    "schedule_length" "public"."schedule_length" NOT NULL,
    "start_date" timestamp with time zone NOT NULL,
    "end_date" timestamp with time zone NOT NULL,
    "duration" real NOT NULL
);

ALTER TABLE "public"."schedules" OWNER TO "postgres";

ALTER TABLE "public"."schedules" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."schedules_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_cuisines" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" NOT NULL,
    "cuisine_id" smallint NOT NULL
);

ALTER TABLE "public"."user_cuisines" OWNER TO "postgres";

ALTER TABLE "public"."user_cuisines" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_cuisines_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_diets" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" NOT NULL,
    "diet_id" smallint NOT NULL
);

ALTER TABLE "public"."user_diets" OWNER TO "postgres";

ALTER TABLE "public"."user_diets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_diets_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_food_allergies" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" NOT NULL,
    "food_allergy_id" smallint NOT NULL
);

ALTER TABLE "public"."user_food_allergies" OWNER TO "postgres";

ALTER TABLE "public"."user_food_allergies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_food_allergies_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user_recreations" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" NOT NULL,
    "recreation_id" smallint NOT NULL
);

ALTER TABLE "public"."user_recreations" OWNER TO "postgres";

ALTER TABLE "public"."user_recreations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_recreations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."addresses"
    ADD CONSTRAINT "addresses_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."budget"
    ADD CONSTRAINT "budget_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."cuisines"
    ADD CONSTRAINT "cuisines_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."cuisines"
    ADD CONSTRAINT "cuisines_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."destinations"
    ADD CONSTRAINT "destinations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."diets"
    ADD CONSTRAINT "diet_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."diets"
    ADD CONSTRAINT "diet_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."email_sign_ups"
    ADD CONSTRAINT "email_sign_ups_email_key" UNIQUE ("email");

ALTER TABLE ONLY "public"."email_sign_ups"
    ADD CONSTRAINT "email_sign_ups_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."food_allergies"
    ADD CONSTRAINT "food_allergies_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."food_allergies"
    ADD CONSTRAINT "food_allergies_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."itineraries"
    ADD CONSTRAINT "itineraries_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."media"
    ADD CONSTRAINT "media_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_username_key" UNIQUE ("username");

ALTER TABLE ONLY "public"."recreations"
    ADD CONSTRAINT "recreations_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."recreations"
    ADD CONSTRAINT "recreations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."schedule_items"
    ADD CONSTRAINT "schedule_items_d_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."schedules"
    ADD CONSTRAINT "schedules_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_cuisines"
    ADD CONSTRAINT "user_cuisines_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_diets"
    ADD CONSTRAINT "user_diets_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_food_allergies"
    ADD CONSTRAINT "user_food_allergies_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user_cuisines"
    ADD CONSTRAINT "user_id_cuisine_id" UNIQUE ("user_id", "cuisine_id");

ALTER TABLE ONLY "public"."user_diets"
    ADD CONSTRAINT "user_id_diet_id" UNIQUE ("user_id", "diet_id");

ALTER TABLE ONLY "public"."user_food_allergies"
    ADD CONSTRAINT "user_id_food_allergy_id" UNIQUE ("user_id", "food_allergy_id");

ALTER TABLE ONLY "public"."user_recreations"
    ADD CONSTRAINT "user_id_recreation_id" UNIQUE ("user_id", "recreation_id");

ALTER TABLE ONLY "public"."user_recreations"
    ADD CONSTRAINT "user_recreations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."itineraries"
    ADD CONSTRAINT "itineraries_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."profiles"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."itineraries"
    ADD CONSTRAINT "public_itineraries_media_id_fkey" FOREIGN KEY ("media_id") REFERENCES "public"."media"("id");

ALTER TABLE ONLY "public"."user_cuisines"
    ADD CONSTRAINT "public_user_cuisines_cuisine_id_fkey" FOREIGN KEY ("cuisine_id") REFERENCES "public"."cuisines"("id");

ALTER TABLE ONLY "public"."user_diets"
    ADD CONSTRAINT "public_user_diets_diet_id_fkey" FOREIGN KEY ("diet_id") REFERENCES "public"."diets"("id");

ALTER TABLE ONLY "public"."user_food_allergies"
    ADD CONSTRAINT "public_user_food_allergies_food_allergy_id_fkey" FOREIGN KEY ("food_allergy_id") REFERENCES "public"."food_allergies"("id");

ALTER TABLE ONLY "public"."user_recreations"
    ADD CONSTRAINT "public_user_recreations_recreation_id_fkey" FOREIGN KEY ("recreation_id") REFERENCES "public"."recreations"("id");

ALTER TABLE ONLY "public"."schedule_items"
    ADD CONSTRAINT "schedule_items_schedule_id_fkey" FOREIGN KEY ("schedule_id") REFERENCES "public"."schedules"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."schedules"
    ADD CONSTRAINT "schedules_itinerary_id_fkey" FOREIGN KEY ("itinerary_id") REFERENCES "public"."itineraries"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."user_cuisines"
    ADD CONSTRAINT "user_cuisines_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."profiles"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."user_diets"
    ADD CONSTRAINT "user_diets_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."profiles"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."user_food_allergies"
    ADD CONSTRAINT "user_food_allergies_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."profiles"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."user_recreations"
    ADD CONSTRAINT "user_recreations_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."profiles"("id") ON UPDATE CASCADE ON DELETE CASCADE;

CREATE POLICY "Enable insert for authenticated users only" ON "public"."media" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."budget" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."cuisines" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."diets" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."food_allergies" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."media" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."recreations" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Public profiles are viewable by everyone." ON "public"."profiles" FOR SELECT USING (true);

CREATE POLICY "Users can insert their own profile." ON "public"."profiles" FOR INSERT WITH CHECK (("auth"."uid"() = "id"));

CREATE POLICY "Users can update own profile." ON "public"."profiles" FOR UPDATE USING (("auth"."uid"() = "id"));

ALTER TABLE "public"."addresses" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."budget" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."cuisines" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."destinations" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."diets" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."email_sign_ups" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "enable crud for auth user" ON "public"."user_recreations" TO "authenticated" USING (("auth"."uid"() = "user_id")) WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "enable crud for auth users" ON "public"."user_cuisines" TO "authenticated" USING (("auth"."uid"() = "user_id")) WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "enable crud for auth users" ON "public"."user_diets" TO "authenticated" USING (("auth"."uid"() = "user_id")) WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "enable crud for auth users" ON "public"."user_food_allergies" TO "authenticated" USING (("auth"."uid"() = "user_id")) WITH CHECK (("auth"."uid"() = "user_id"));

ALTER TABLE "public"."food_allergies" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "itin crud" ON "public"."itineraries" TO "authenticated" USING (("auth"."uid"() = "user_id")) WITH CHECK (("auth"."uid"() = "user_id"));

ALTER TABLE "public"."itineraries" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."media" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."profiles" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "public_can_sign_up" ON "public"."email_sign_ups" FOR INSERT WITH CHECK (true);

ALTER TABLE "public"."recreations" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."schedule_items" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."schedules" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_cuisines" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_diets" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_food_allergies" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user_recreations" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."itineraries";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."delete_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."delete_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."delete_user"() TO "service_role";

GRANT ALL ON FUNCTION "public"."get_all_preference_choices"() TO "anon";
GRANT ALL ON FUNCTION "public"."get_all_preference_choices"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."get_all_preference_choices"() TO "service_role";

GRANT ALL ON FUNCTION "public"."get_user_preferences"("user_id" "uuid") TO "anon";
GRANT ALL ON FUNCTION "public"."get_user_preferences"("user_id" "uuid") TO "authenticated";
GRANT ALL ON FUNCTION "public"."get_user_preferences"("user_id" "uuid") TO "service_role";

GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "service_role";

GRANT ALL ON TABLE "public"."addresses" TO "anon";
GRANT ALL ON TABLE "public"."addresses" TO "authenticated";
GRANT ALL ON TABLE "public"."addresses" TO "service_role";

GRANT ALL ON SEQUENCE "public"."addresses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."addresses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."addresses_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."budget" TO "anon";
GRANT ALL ON TABLE "public"."budget" TO "authenticated";
GRANT ALL ON TABLE "public"."budget" TO "service_role";

GRANT ALL ON SEQUENCE "public"."budget_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."budget_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."budget_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."cuisines" TO "anon";
GRANT ALL ON TABLE "public"."cuisines" TO "authenticated";
GRANT ALL ON TABLE "public"."cuisines" TO "service_role";

GRANT ALL ON SEQUENCE "public"."cuisines_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."cuisines_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."cuisines_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."destinations" TO "anon";
GRANT ALL ON TABLE "public"."destinations" TO "authenticated";
GRANT ALL ON TABLE "public"."destinations" TO "service_role";

GRANT ALL ON SEQUENCE "public"."destinations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."destinations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."destinations_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."diets" TO "anon";
GRANT ALL ON TABLE "public"."diets" TO "authenticated";
GRANT ALL ON TABLE "public"."diets" TO "service_role";

GRANT ALL ON SEQUENCE "public"."diet_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."diet_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."diet_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."email_sign_ups" TO "anon";
GRANT ALL ON TABLE "public"."email_sign_ups" TO "authenticated";
GRANT ALL ON TABLE "public"."email_sign_ups" TO "service_role";

GRANT ALL ON SEQUENCE "public"."email_sign_ups_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."email_sign_ups_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."email_sign_ups_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."food_allergies" TO "anon";
GRANT ALL ON TABLE "public"."food_allergies" TO "authenticated";
GRANT ALL ON TABLE "public"."food_allergies" TO "service_role";

GRANT ALL ON SEQUENCE "public"."food_allergies_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."food_allergies_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."food_allergies_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."itineraries" TO "anon";
GRANT ALL ON TABLE "public"."itineraries" TO "authenticated";
GRANT ALL ON TABLE "public"."itineraries" TO "service_role";

GRANT ALL ON SEQUENCE "public"."itineraries_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."itineraries_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."itineraries_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."media" TO "anon";
GRANT ALL ON TABLE "public"."media" TO "authenticated";
GRANT ALL ON TABLE "public"."media" TO "service_role";

GRANT ALL ON SEQUENCE "public"."media_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."media_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."media_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."profiles" TO "anon";
GRANT ALL ON TABLE "public"."profiles" TO "authenticated";
GRANT ALL ON TABLE "public"."profiles" TO "service_role";

GRANT ALL ON TABLE "public"."recreations" TO "anon";
GRANT ALL ON TABLE "public"."recreations" TO "authenticated";
GRANT ALL ON TABLE "public"."recreations" TO "service_role";

GRANT ALL ON SEQUENCE "public"."recreations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."recreations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."recreations_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."schedule_items" TO "anon";
GRANT ALL ON TABLE "public"."schedule_items" TO "authenticated";
GRANT ALL ON TABLE "public"."schedule_items" TO "service_role";

GRANT ALL ON SEQUENCE "public"."schedule_items_d_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."schedule_items_d_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."schedule_items_d_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."schedules" TO "anon";
GRANT ALL ON TABLE "public"."schedules" TO "authenticated";
GRANT ALL ON TABLE "public"."schedules" TO "service_role";

GRANT ALL ON SEQUENCE "public"."schedules_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."schedules_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."schedules_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_cuisines" TO "anon";
GRANT ALL ON TABLE "public"."user_cuisines" TO "authenticated";
GRANT ALL ON TABLE "public"."user_cuisines" TO "service_role";

GRANT ALL ON SEQUENCE "public"."user_cuisines_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_cuisines_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_cuisines_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_diets" TO "anon";
GRANT ALL ON TABLE "public"."user_diets" TO "authenticated";
GRANT ALL ON TABLE "public"."user_diets" TO "service_role";

GRANT ALL ON SEQUENCE "public"."user_diets_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_diets_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_diets_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_food_allergies" TO "anon";
GRANT ALL ON TABLE "public"."user_food_allergies" TO "authenticated";
GRANT ALL ON TABLE "public"."user_food_allergies" TO "service_role";

GRANT ALL ON SEQUENCE "public"."user_food_allergies_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_food_allergies_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_food_allergies_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user_recreations" TO "anon";
GRANT ALL ON TABLE "public"."user_recreations" TO "authenticated";
GRANT ALL ON TABLE "public"."user_recreations" TO "service_role";

GRANT ALL ON SEQUENCE "public"."user_recreations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_recreations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_recreations_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
